######################################################
## Index Compaction Library Application Config File ##
######################################################

###########################################
## Required settings in application.conf ##
###########################################

# These settings are for Index Compaction Library's Compaction Job.
here.platform.index-compaction {

  # Fully Qualified Class Name of 'CompactionUDF' interface implementation provided by the user.
  # The class must be public and have a public constructor.
  udf = com.here.platform.index.compaction.batch.ParquetCompactionExample

  # Index Layer ID whose data is to be compacted.
  layer = index

  # These settings are for configuring the size of indexed files and compacted files.
  file-size {
    # The minimum acceptable byte size of an indexed file.
    # If there are multiple indexed files having the same indexing attributes with size smaller than this value,
    # then those files will be re-indexed in a single file.
    min = 134217728 # 128 MB

    # The maximum acceptable byte size of a compacted file.
    # If the total size of multiple indexed files having the same indexing attributes exceeds this max file-size parameter,
    # then the files will be compacted into more than one file with max file-size being honored.
    max = 268435456 # 256 MB
  }

  query {
    # For compaction, an entire index layer can be queried or a slice of an index layer based on timewindow, heretile, etc. can be queried.
    # This property expects query constraint in RSQL format.
    # Note that the compaction pipeline needs to be configured with appropriate resources so it can handle amount of data queried from index layer.
    constraint = "size>0" # Eg. "tileId==78499;eventType==SignRecognition;ingestionTime==1588800000"
  }
}